<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-12-11T17:45:33+01:00</updated><id>http://localhost:4000/</id><title type="html">Bartnet</title><subtitle>You've heard of skynet, now enter the bartnet.</subtitle><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><entry><title type="html">Slaying the Top 2000</title><link href="http://localhost:4000/2018/12/08/Slayer/" rel="alternate" type="text/html" title="Slaying the Top 2000" /><published>2018-12-08T00:00:00+01:00</published><updated>2018-12-08T00:00:00+01:00</updated><id>http://localhost:4000/2018/12/08/Slayer</id><content type="html" xml:base="http://localhost:4000/2018/12/08/Slayer/">&lt;p&gt;&lt;em&gt;Spoilers: It didn’t work, but with a bit more time and dedication, we will have a serious go at it next year..&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For nearly 20 years now, the NPO2’s top 2000 marathon radio program has been a staple of a Dutch new year’s eve. Remarkably,
last year’s edition was listened to by &lt;strong&gt;11.3 million&lt;/strong&gt; people, or some 76% of the population aged 10 or older. In comparison, the King’s 2017 christmas address drew a mere million viewers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/yC3C4f6.jpg&quot; alt=&quot;Willem&quot; /&gt;
&lt;em&gt;Unimpressed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The mere suggestion of manipulating the results of this list drew a good friend to describe it as a sacred national institution, and that anything of the sort would be akin to high treason.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, the idea behind the top 2000 is pretty compelling and wholesome, but to be frank, the top of this list has met with little variation since it’s inception. Indeed, anyone who knows anything about this list, knows that Queen’s &lt;em&gt;Bohemian Rhapsody&lt;/em&gt; has been in the number 1 spot almost every single time, otherwise taking second place. This being the crown jewel of repetition, the top 10 is otherwise populated by songs that you also loved to hear, the first 14 times you heard them. Such hotel-lobby bangers as &lt;em&gt;Hotel California&lt;/em&gt;, &lt;em&gt;Piano Man&lt;/em&gt;, and &lt;em&gt;November Rain&lt;/em&gt; all tend to come back, year after year.&lt;/p&gt;

&lt;p&gt;Enter Slayer. A band whose reputation precedes it as one of the heaviest, fastest, and most sonically abraisive acts in modern music. Celebrated by metalheads of all cultures and origins as one of the groups to have established the thrash metal movement, their music has inspired an entire generation of musicians, and united lovers of heavy music all over the globe.&lt;/p&gt;

&lt;p&gt;Why not try and take the #1 spot away from Freddie, and see if we could celebrate everything Slayer has done in the year that they choose to hang up their guitars?&lt;/p&gt;

&lt;h2 id=&quot;goals-and-requirements&quot;&gt;Goals and Requirements&lt;/h2&gt;

&lt;p&gt;The plan had a simple goal: vote as many times as &lt;del&gt;humanly&lt;/del&gt; possible for the Slayer song “Angel of Death”, with the hope of cracking the top 10. Since time is short, and I’m not completely aware of the internal anti-botting measures in place on the voting website, I decided to use the &lt;a href=&quot;https://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; web-driver to autonomously steer a a browser into doing my bidding, and enter information into the fields of my choosing.&lt;/p&gt;

&lt;p&gt;The top 2000 voting schema works as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vote for a minimum of 5 songs of your choosing&lt;/li&gt;
  &lt;li&gt;Enter your motivation for choosing said songs (optional)&lt;/li&gt;
  &lt;li&gt;Enter your full name and e-mail address&lt;/li&gt;
  &lt;li&gt;Accept the ToC and complete a reCAPTCHA&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point, the first challenges present themselves.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We need to vote for 4 other songs, if we choose the same ones each time, then they will get an equal number of votes. Also, we should probably randomize Slayer’s position in the order to be more inconspicuous.&lt;/li&gt;
  &lt;li&gt;We need a bunch of generic names, as well as email addresses&lt;/li&gt;
  &lt;li&gt;We need to find a way to circumvent the CAPTCHA&lt;/li&gt;
  &lt;li&gt;The script needs to execute in as little time as possible, such that it can complete as often as possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First off though, we need to set up the webdriver.&lt;/p&gt;

&lt;h2 id=&quot;set-up&quot;&gt;Set-up&lt;/h2&gt;

&lt;p&gt;To get started, we imported the relevant packages and initialised the webdriver to work with firefox.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.action_chains&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionChains&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stem.nporadio2.nl/top2000/1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Allows you to call all sorts of actions on elements on a webpage. In order to do this, you need to provide it with the location of the element that you want to manipulate. This can be by searching through HTML tags based on class or id, but I have found using XPath to be the quickest for the selection of specific elements on a page.&lt;/p&gt;

&lt;p&gt;To find the XPath of an object on a webpage, simply inspect it in your browser. Firefox and Chrome both provide a handy copy XPath option that allows you to jam it directly into a &lt;em&gt;find_element_by_xpath&lt;/em&gt; in your code. As an example, clicking a button would look something like this:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;XPATH_TO_BUTTON&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="slayer" /><summary type="html">Spoilers: It didn’t work, but with a bit more time and dedication, we will have a serious go at it next year..</summary></entry><entry><title type="html">Bartnet, and how it works</title><link href="http://localhost:4000/2018/11/30/origins/" rel="alternate" type="text/html" title="Bartnet, and how it works" /><published>2018-11-30T00:00:00+01:00</published><updated>2018-11-30T00:00:00+01:00</updated><id>http://localhost:4000/2018/11/30/origins</id><content type="html" xml:base="http://localhost:4000/2018/11/30/origins/">&lt;p&gt;Putting aside the ‘how’ for a second, why does this page exist? Why do blogs exist at all? Is it really necessary for every single person to air out their metaphorical dirty laundry on the internet, for all to see?&lt;/p&gt;

&lt;p&gt;Surely enlightenment can be sought elsewhere, from sources more credible than the recalcitrant braincells that choose to always sit at the back of the bus. Instead, you could read a book or newspaper, or perhaps even attempt to decipher a dirty handkerchief.&lt;/p&gt;

&lt;p&gt;A power inside compels us, for whatever reason, to share our experiences with the world; some to teach, some to persuade, and some to entertain.&lt;/p&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;

&lt;p&gt;This site is run using &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, a simple site generation platform written in ruby, that works great for static sites such as blogs. While being easy to use and update, one of the best features is arguably that you can host a website in one click on Github Pages, as they offer a built in Jekyll page builder.&lt;/p&gt;

&lt;p&gt;Credit where credit is due, styling of this page is run off of a template called &lt;a href=&quot;https://hydejack.com&quot;&gt;&lt;em&gt;Hydejack&lt;/em&gt;&lt;/a&gt;, made by the talented qwtel.&lt;/p&gt;

&lt;p&gt;The page is run out of two repositories, one for development and one for deployment, so that it can be edited from virtually anywhere as long as I have access to the internet.&lt;/p&gt;

&lt;p&gt;The development repository contains everything needed to build the site, including all markdown files, stylesheets, javascript etc. The static site files are generated using these, and then moved to the deployment repository which houses just the generated static site files. Github automatically builds and hosts the site from the static files.&lt;/p&gt;

&lt;p&gt;Ideas for posts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chess WC battle&lt;/li&gt;
  &lt;li&gt;Ardea GM&lt;/li&gt;
  &lt;li&gt;Myanmar metals writeup&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="hydejack" /><summary type="html">Putting aside the ‘how’ for a second, why does this page exist? Why do blogs exist at all? Is it really necessary for every single person to air out their metaphorical dirty laundry on the internet, for all to see?</summary></entry></feed>